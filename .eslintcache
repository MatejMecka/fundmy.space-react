[{"/Users/matejplavevski/Documents/Projects/GitHub/fundmy.space-react/src/App.js":"1","/Users/matejplavevski/Documents/Projects/GitHub/fundmy.space-react/src/components/dashboard/dashboard.jsx":"2","/Users/matejplavevski/Documents/Projects/GitHub/fundmy.space-react/src/components/dashboard/elements/appbar.jsx":"3","/Users/matejplavevski/Documents/Projects/GitHub/fundmy.space-react/src/components/authentication/SignUp.jsx":"4","/Users/matejplavevski/Documents/Projects/GitHub/fundmy.space-react/src/components/general/copyright.jsx":"5","/Users/matejplavevski/Documents/Projects/GitHub/fundmy.space-react/src/components/requests/userinfo.js":"6","/Users/matejplavevski/Documents/Projects/GitHub/fundmy.space-react/src/components/authentication/Login.jsx":"7","/Users/matejplavevski/Documents/Projects/GitHub/fundmy.space-react/src/components/requests/signup.js":"8","/Users/matejplavevski/Documents/Projects/GitHub/fundmy.space-react/src/components/requests/login.js":"9","/Users/matejplavevski/Documents/Projects/GitHub/fundmy.space-react/src/components/dashboard/elements/currency_card.jsx":"10","/Users/matejplavevski/Documents/Projects/GitHub/fundmy.space-react/src/components/authentication/authentication.jsx":"11","/Users/matejplavevski/Documents/Projects/GitHub/fundmy.space-react/src/components/general/alert.jsx":"12","/Users/matejplavevski/Documents/Projects/GitHub/fundmy.space-react/src/reportWebVitals.js":"13","/Users/matejplavevski/Documents/Projects/GitHub/fundmy.space-react/src/history.js":"14","/Users/matejplavevski/Documents/Projects/GitHub/fundmy.space-react/src/components/requests/balances.js":"15","/Users/matejplavevski/Documents/Projects/GitHub/fundmy.space-react/src/index.js":"16","/Users/matejplavevski/Documents/Projects/GitHub/fundmy.space-react/src/components/dashboard/elements/not-found.jsx":"17","/Users/matejplavevski/Documents/Projects/GitHub/fundmy.space-react/src/components/requests/operations.js":"18","/Users/matejplavevski/Documents/Projects/GitHub/fundmy.space-react/src/components/dashboard/elements/claimable_balances_table.jsx":"19","/Users/matejplavevski/Documents/Projects/GitHub/fundmy.space-react/src/components/dashboard/elements/operations_table.jsx":"20","/Users/matejplavevski/Documents/Projects/GitHub/fundmy.space-react/src/components/requests/claimable_balances.js":"21","/Users/matejplavevski/Documents/Projects/GitHub/fundmy.space-react/src/components/requests/profile.js":"22","/Users/matejplavevski/Documents/Projects/GitHub/fundmy.space-react/src/components/profile/profile.jsx":"23","/Users/matejplavevski/Documents/Projects/GitHub/fundmy.space-react/src/components/profile/elements/payment-form.jsx":"24","/Users/matejplavevski/Documents/Projects/GitHub/fundmy.space-react/src/components/requests/get_user_public_key.js":"25","/Users/matejplavevski/Documents/Projects/GitHub/fundmy.space-react/src/components/requests/logout.js":"26"},{"size":1783,"mtime":1614711719591,"results":"27","hashOfConfig":"28"},{"size":4498,"mtime":1614595930326,"results":"29","hashOfConfig":"28"},{"size":3371,"mtime":1614711241737,"results":"30","hashOfConfig":"28"},{"size":4037,"mtime":1611606335084,"results":"31","hashOfConfig":"28"},{"size":436,"mtime":1611509992549,"results":"32","hashOfConfig":"28"},{"size":547,"mtime":1611655518522,"results":"33","hashOfConfig":"28"},{"size":2992,"mtime":1614711098446,"results":"34","hashOfConfig":"28"},{"size":800,"mtime":1611654895232,"results":"35","hashOfConfig":"28"},{"size":714,"mtime":1611659845961,"results":"36","hashOfConfig":"28"},{"size":1134,"mtime":1613853712101,"results":"37","hashOfConfig":"28"},{"size":2580,"mtime":1611659067015,"results":"38","hashOfConfig":"28"},{"size":155,"mtime":1611606196725,"results":"39","hashOfConfig":"28"},{"size":362,"mtime":1611427566681,"results":"40","hashOfConfig":"28"},{"size":87,"mtime":1611614243569,"results":"41","hashOfConfig":"28"},{"size":380,"mtime":1613821750570,"results":"42","hashOfConfig":"28"},{"size":500,"mtime":1611427566680,"results":"43","hashOfConfig":"28"},{"size":1087,"mtime":1613990055688,"results":"44","hashOfConfig":"28"},{"size":384,"mtime":1614165649327,"results":"45","hashOfConfig":"28"},{"size":1635,"mtime":1614169622138,"results":"46","hashOfConfig":"28"},{"size":1946,"mtime":1614170285000,"results":"47","hashOfConfig":"28"},{"size":399,"mtime":1614165573775,"results":"48","hashOfConfig":"28"},{"size":430,"mtime":1614624244907,"results":"49","hashOfConfig":"28"},{"size":3189,"mtime":1614709544475,"results":"50","hashOfConfig":"28"},{"size":7447,"mtime":1614710657416,"results":"51","hashOfConfig":"28"},{"size":433,"mtime":1614624188156,"results":"52","hashOfConfig":"28"},{"size":738,"mtime":1614710950383,"results":"53","hashOfConfig":"28"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"1s6rir",{"filePath":"56","messages":"57","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"58","usedDeprecatedRules":"59"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"62","messages":"63","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"64","usedDeprecatedRules":"65"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"65"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"73","usedDeprecatedRules":"59"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"77","messages":"78","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"65"},{"filePath":"79","messages":"80","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"59"},{"filePath":"81","messages":"82","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"83","messages":"84","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"85"},{"filePath":"86","messages":"87","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"89","messages":"90","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"91"},{"filePath":"92","messages":"93","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"59"},{"filePath":"94","messages":"95","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"65"},{"filePath":"96","messages":"97","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"98"},{"filePath":"99","messages":"100","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"65"},{"filePath":"101","messages":"102","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"103","usedDeprecatedRules":"65"},{"filePath":"104","messages":"105","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"106","messages":"107","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"59"},{"filePath":"108","messages":"109","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"59"},{"filePath":"110","messages":"111","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"112"},{"filePath":"113","messages":"114","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"115","usedDeprecatedRules":"59"},{"filePath":"116","messages":"117","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"118","messages":"119","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"120","usedDeprecatedRules":"121"},"/Users/matejplavevski/Documents/Projects/GitHub/fundmy.space-react/src/App.js",["122","123","124","125","126","127","128"],"/Users/matejplavevski/Documents/Projects/GitHub/fundmy.space-react/src/components/dashboard/dashboard.jsx",["129","130","131","132","133","134"],"import React from 'react';\nimport Grid from '@material-ui/core/Grid';\nimport Typography from '@material-ui/core/Typography';\nimport BalanceCard from './elements/currency_card' ;\nimport NotFound from \"./elements/not-found\";\nimport ClaimableBalanceTable from \"./elements/claimable_balances_table\";\nimport OperationsTable from \"./elements/operations_table\";\nimport balancesRequest from '../requests/balances';\nimport Navbar from './elements/appbar';\nimport claimableBalancesRequest from '../requests/claimable_balances';\nimport operationsRequest from '../requests/operations';\nimport { makeStyles } from \"@material-ui/core/styles\";\n\nfunction ClaimableBalances(data){\n  console.log(data['data'])\n  if(data['data'].length != 0){\n    return <ClaimableBalanceTable data={data[\"data\"]}/>\n  } else {\n    return <NotFound message=\"No claimable balances have been found\"/>\n  }\n}\n\nfunction Operations(data){\n  console.log(data['data'])\n  if(data['data'].length != 0){\n    return <OperationsTable data={data[\"data\"]}/>\n  } else {\n    return <NotFound message=\"No past operations have been found\"/>\n  }\n}\n\nexport default function Dashboard() {\n    const useStyles = makeStyles((theme) => ({\n        root: {\n          minWidth: 275,\n          padding: \"50px\",\n        },\n        thatDiv: {\n          display: \"flex\",\n          alignItems: \"center\",\n          alignContent: \"center\"\n        },\n        bullet: {\n          display: \"inline-block\",\n          margin: \"0 2px\",\n          transform: \"scale(0.8)\"\n        },\n        title: {\n          textAlign: 'left',\n          paddingBottom: \"25px\"\n        },\n        pos: {\n          marginBottom: 12\n        },\n        value: {\n          textAlign: 'left'\n        },\n        body: {\n            padding: \"5px\"\n        },\n        pending_balances: {\n            position: 'absolute', left: '50%', top: '50%',\n            transform: 'translate(-50%, -50%)',\n            display: 'flex',\n            alignItems: 'center',\n            flexWrap: 'wrap',\n        },\n        divider: {\n            border: `1px solid ${theme.palette.divider}`\n        },\n        card: {\n          paddingBottom: \"25px\"\n        },\n        lastTitle: {\n          paddingTop: \"25px\"\n        }\n      }));\n\n    const classes = useStyles();\n    const [isLoaded, setIsLoaded] = React.useState(false);\n    const [balances, setBalances] = React.useState([]);\n    const [claimableBalances, setClaimableBalances] = React.useState([]);\n    const [operations, setOperations] = React.useState([]);\n\n\n    React.useEffect(() => {\n      balancesRequest().then(data => {\n        const [status, responseText] = data\n        setIsLoaded(true);\n        setBalances(responseText);\n        console.log(responseText);\n      })\n\n      claimableBalancesRequest().then(data => {\n        const [status, responseText] = data\n        setIsLoaded(true);\n        setClaimableBalances(responseText);\n        console.log(responseText);\n      })\n\n      operationsRequest().then(data => {\n        const [status, responseText] = data\n        setIsLoaded(true);\n        setOperations(responseText);\n        console.log(responseText);\n      })\n\n\n    }, []);\n\n\n    return (\n      <div>\n      <Navbar loggedIn={true}/>\n      <div className={classes.thatDiv}>\n        <Grid container className={classes.root} spacing={0} justify=\"center\" alignItems=\"center\" direction=\"column\">\n            <Grid container item>\n            <Typography variant=\"h4\" component=\"h4\" className={classes.title}>Balances</Typography>\n                <Grid item container direction=\"row\" justify=\"left\" alignItems=\"left\">\n                  {\n                    \n                    balances.map((object) => \n                    <Grid item xs={3} sm={balances.length/3} className={classes.card}>\n                      <BalanceCard asset={object.asset_code} balance={object.balance}/>\n                    </Grid>\n                      \n                  )\n                  \n                  }\n                </Grid> \n            </Grid>\n            <Grid container item > \n            <Typography variant=\"h4\" component=\"h4\" className={classes.title}>Claimable Balances</Typography>\n              <ClaimableBalances data={claimableBalances}/>\n            </Grid>\n\n            <Grid container item >\n              <Typography variant=\"h4\" component=\"h4\" className={`${classes.title} ${classes.lastTitle}`}>Past operations</Typography>\n              <Operations data={operations} />\n            </Grid>\n\n        </Grid>\n      </div>\n      </div>\n    )\n}",["135","136"],"/Users/matejplavevski/Documents/Projects/GitHub/fundmy.space-react/src/components/dashboard/elements/appbar.jsx",["137","138","139"],"/Users/matejplavevski/Documents/Projects/GitHub/fundmy.space-react/src/components/authentication/SignUp.jsx",["140","141"],"import React from 'react';\nimport Button from '@material-ui/core/Button';\nimport TextField from '@material-ui/core/TextField';\nimport Snackbar from '@material-ui/core/Snackbar';\nimport MuiAlert from '@material-ui/lab/Alert';\nimport Grid from '@material-ui/core/Grid';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { useForm } from 'react-hook-form';\nimport Alert from '../general/alert';\nimport signUpRequest from '../requests/signup';\n\nexport default function SignUpSide() {\n    const [open, setOpen] = React.useState(false);\n    const [message, setMessage] = React.useState('');\n\n    const handleClose = (event, reason) => {\n        if (reason === 'clickaway') {\n          return;\n        }\n    \n        setOpen(false);\n    };\n\n\n    const useStyles = makeStyles((theme) => ({\n        form: {\n          width: '100%', // Fix IE 11 issue.\n          marginTop: theme.spacing(1),\n        },\n        submit: {\n          margin: theme.spacing(3, 0, 2),\n        },\n      }));\n\n  const classes = useStyles();\n  const { register, handleSubmit, errors } = useForm();\n\n  const onSubmit = async (data) => {\n    signUpRequest(data).then(response => {\n        const [status, responseText] = response\n        if(!status){\n            setMessage(responseText)\n            console.log('Message: ' + message   )\n            setOpen(true);\n        }\n    }).catch((error) => {\n        console.log(error)\n    })\n    }\n\n  return (\n    <form className={classes.form} onSubmit={handleSubmit(onSubmit)}>\n          <Grid container spacing={2}>\n            <Grid item xs={12}>\n            <TextField\n                    autoComplete=\"username\"\n                    name=\"username\"\n                    variant=\"outlined\"\n                    required\n                    fullWidth\n                    id=\"firstName\"\n                    label=\"Username\"\n                    autoFocus\n                    inputRef={register({ required: true})}\n                />\n            </Grid>\n            <Grid item xs={12} sm={6}>\n              <TextField\n                autoComplete=\"fname\"\n                name=\"first_name\"\n                variant=\"outlined\"\n                required\n                fullWidth\n                id=\"firstName\"\n                label=\"First name\"\n                autoFocus\n                inputRef={register({ required: true})}\n              />\n            </Grid>\n            <Grid item xs={12} sm={6}>\n              <TextField\n                variant=\"outlined\"\n                required\n                fullWidth\n                id=\"lastName\"\n                label=\"Last name\"\n                name=\"last_name\"\n                autoComplete=\"lname\"\n                inputRef={register({ required: true})}\n              />\n            </Grid>\n            <Grid item xs={12}>\n              <TextField\n                variant=\"outlined\"\n                required\n                fullWidth\n                id=\"email\"\n                label=\"Email address\"\n                name=\"email\"\n                autoComplete=\"email\"\n                type=\"email\"\n                inputRef={register({ required: true})}\n              />\n            </Grid>\n            <Grid item xs={12}>\n              <TextField\n                variant=\"outlined\"\n                required\n                fullWidth\n                name=\"password1\"\n                label=\"Password\"\n                type=\"password\"\n                id=\"password\"\n                autoComplete=\"current-password\"\n                inputRef={register({ required: true})}\n              />\n            </Grid>\n          </Grid>\n          <Button\n            type=\"submit\"\n            fullWidth\n            variant=\"contained\"\n            color=\"primary\"\n            className={classes.submit}\n          >\n            Sign Up\n          </Button>\n          <Snackbar open={open} autoHideDuration={6000} onClose={handleClose}>\n                <Alert onClose={handleClose} severity=\"error\">\n                    { message }\n                </Alert>\n            </Snackbar>\n        </form>\n  );\n}\n",["142","143"],"/Users/matejplavevski/Documents/Projects/GitHub/fundmy.space-react/src/components/general/copyright.jsx",[],["144","145"],"/Users/matejplavevski/Documents/Projects/GitHub/fundmy.space-react/src/components/requests/userinfo.js",[],"/Users/matejplavevski/Documents/Projects/GitHub/fundmy.space-react/src/components/authentication/Login.jsx",["146"],"import React from 'react';\nimport Button from '@material-ui/core/Button';\nimport TextField from '@material-ui/core/TextField';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport Snackbar from '@material-ui/core/Snackbar';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { useForm } from 'react-hook-form';\nimport loginRequest from \"../requests/login\";\nimport Alert from '../general/alert';\nimport { useHistory } from \"react-router-dom\";\n\nexport default function SignInSide() {\n    const [open, setOpen] = React.useState(false);\n    const [message, setMessage] = React.useState('');\n\n    const handleClose = (event, reason) => {\n        if (reason === 'clickaway') {\n          return;\n        }\n    \n        setOpen(false);\n    };\n\n    const useStyles = makeStyles((theme) => ({\n        form: { \n          width: '100%', // Fix IE 11 issue.\n          marginTop: theme.spacing(1),\n        },\n        submit: {\n          margin: theme.spacing(3, 0, 2),\n        },\n      }));\n\n    const classes = useStyles();\n    const { register, handleSubmit, errors } = useForm();\n    const history = useHistory();\n\n    const onSubmit = async (data) => {\n        loginRequest(data).then(response => {\n            const [status, responseText] = response\n            if(status){\n                history.push('/dashboard')\n            } else {\n                setMessage(responseText)\n                console.log('Message: ' + message   )\n                setOpen(true);\n            }\n        }).catch((error) => {\n            console.log(error)\n        })\n    \n    };\n\n  return (\n    <form className={classes.form} onSubmit={handleSubmit(onSubmit)}>\n    <TextField\n        variant=\"outlined\"\n        margin=\"normal\"\n        fullWidth\n        id=\"username\"\n        label=\"Username\"\n        name=\"username\"\n        autoComplete=\"username\"\n        autoFocus\n        inputRef={register({ required: true})}\n    />\n            <TextField\n              variant=\"outlined\"\n              margin=\"normal\"\n              required\n              fullWidth\n              name=\"password\"\n              label=\"Password\"\n              type=\"password\"\n              id=\"password\"\n              autoComplete=\"current-password\"\n              inputRef={register({ required: true})}\n            />\n            <FormControlLabel\n              control={<Checkbox value=\"remember\" color=\"primary\" />}\n              label=\"Remember me\"\n            />\n            <Button\n              type=\"submit\"\n              fullWidth\n              variant=\"contained\"\n              color=\"primary\"\n              className={classes.submit}\n            >\n              Sign In\n            </Button>\n            <Snackbar open={open} autoHideDuration={6000} onClose={handleClose}>\n                <Alert onClose={handleClose} severity=\"error\">\n                    { message }\n                </Alert>\n            </Snackbar>\n            </form>\n            \n  );\n}\n","/Users/matejplavevski/Documents/Projects/GitHub/fundmy.space-react/src/components/requests/signup.js",[],["147","148"],"/Users/matejplavevski/Documents/Projects/GitHub/fundmy.space-react/src/components/requests/login.js",[],"/Users/matejplavevski/Documents/Projects/GitHub/fundmy.space-react/src/components/dashboard/elements/currency_card.jsx",[],"/Users/matejplavevski/Documents/Projects/GitHub/fundmy.space-react/src/components/authentication/authentication.jsx",[],"/Users/matejplavevski/Documents/Projects/GitHub/fundmy.space-react/src/components/general/alert.jsx",[],["149","150"],"/Users/matejplavevski/Documents/Projects/GitHub/fundmy.space-react/src/reportWebVitals.js",[],["151","152"],"/Users/matejplavevski/Documents/Projects/GitHub/fundmy.space-react/src/history.js",[],["153","154"],"/Users/matejplavevski/Documents/Projects/GitHub/fundmy.space-react/src/components/requests/balances.js",[],"/Users/matejplavevski/Documents/Projects/GitHub/fundmy.space-react/src/index.js",[],"/Users/matejplavevski/Documents/Projects/GitHub/fundmy.space-react/src/components/dashboard/elements/not-found.jsx",[],["155","156"],"/Users/matejplavevski/Documents/Projects/GitHub/fundmy.space-react/src/components/requests/operations.js",[],"/Users/matejplavevski/Documents/Projects/GitHub/fundmy.space-react/src/components/dashboard/elements/claimable_balances_table.jsx",["157","158"],"import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableContainer from '@material-ui/core/TableContainer';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\nimport Paper from '@material-ui/core/Paper';\nimport Button from '@material-ui/core/Button';\nimport Link from '@material-ui/core/Link';\n\nconst useStyles = makeStyles({\n  table: {\n    minWidth: 650,\n  },\n});\n\nexport default function ClaimableBalanceTable(props) {\n  const classes = useStyles();\n  const data = props.data\n  console.log(data)\n\n  return (\n    <TableContainer component={Paper}>\n      <Table className={classes.table} aria-label=\"simple table\">\n        <TableHead>\n          <TableRow>\n            <TableCell>Adress</TableCell>\n            <TableCell align=\"right\">Asset</TableCell>\n            <TableCell align=\"right\">Amount</TableCell>\n            <TableCell align=\"right\">Action</TableCell>\n          </TableRow>\n        </TableHead>\n        <TableBody>\n          {data.map((row) => (\n            <TableRow key={row.id}>\n              <TableCell component=\"th\" scope=\"row\">\n                {row.sponsor}\n              </TableCell>\n              <TableCell align=\"right\">{row.asset}</TableCell>\n              <TableCell align=\"right\">{row.amount}</TableCell>\n              <TableCell align=\"right\">{row.id}</TableCell>\n            </TableRow>\n          ))}\n        </TableBody>\n      </Table>\n    </TableContainer>\n  );\n}","/Users/matejplavevski/Documents/Projects/GitHub/fundmy.space-react/src/components/dashboard/elements/operations_table.jsx",[],"/Users/matejplavevski/Documents/Projects/GitHub/fundmy.space-react/src/components/requests/claimable_balances.js",[],"/Users/matejplavevski/Documents/Projects/GitHub/fundmy.space-react/src/components/requests/profile.js",[],"/Users/matejplavevski/Documents/Projects/GitHub/fundmy.space-react/src/components/profile/profile.jsx",["159","160","161","162"],"import React from 'react';\nimport Grid from '@material-ui/core/Grid';\nimport Typography from '@material-ui/core/Typography';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Link from '@material-ui/core/Link';\nimport profileRequest from '../requests/profile';\nimport {useParams} from 'react-router-dom'; \nimport Avatar from '@material-ui/core/Avatar';\nimport { deepOrange, deepPurple } from '@material-ui/core/colors';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport Navbar from '../dashboard/elements/appbar';\nimport PaymentForm from './elements/payment-form';\nimport profilePublicKey from '../requests/get_user_public_key';\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    display: 'flex',\n    '& > *': {\n      margin: theme.spacing(1),\n    },\n  },\n  orange: {\n    color: theme.palette.getContrastText(deepOrange[500]),\n    backgroundColor: deepOrange[500],\n  },\n  purple: {\n    color: theme.palette.getContrastText(deepPurple[500]),\n    backgroundColor: deepPurple[500],\n  },\n  large: {\n    width: theme.spacing(7),\n    height: theme.spacing(7),\n  },\n  title: {\n    textAlign: 'left',\n    paddingTop: \"25px\"\n  },\n}));\n\nexport default function ProfilePage() {\n    const {username} = useParams()\n    const classes = useStyles();\n\n    const [user, setUser] = React.useState({});\n    const [public_key, setPublicKey] = React.useState({});\n    const [isLoading, setLoading] = React.useState(false);\n    \n    React.useEffect(() => {\n      profileRequest(username).then(data => {\n            const [status, responseText] = data\n            setUser(responseText);\n            console.log(responseText);\n      })\n\n      profilePublicKey(username).then(data => {\n        const [status, responseText] = data\n        setPublicKey(responseText);\n        console.log(responseText);\n        setLoading(true);\n      })\n    \n    }, [])\n\n    return (\n        <div>\n        <Navbar loggedIn={true}/>\n        <Grid container className={classes.root} spacing={0} justify=\"center\" alignItems=\"center\" direction=\"column\">\n          {\n            isLoading ? \n            <Grid container item direction=\"column\" justify=\"center\" alignItems=\"center\">\n            <Avatar className={`${classes.purple} ${classes.large}`}>\n                {`${user.accountId.first_name[0]}${user.accountId.last_name[0]}`}\n            </Avatar>\n            <Typography variant=\"h4\" component=\"h4\" className={classes.title}>{`${user.accountId.first_name} ${user.accountId.last_name}`}</Typography>\n            <Typography variant=\"h4\" component=\"h4\" className={classes.title}>{user.short_description}</Typography>\n            </Grid>\n            : <CircularProgress />  \n          }\n        </Grid>\n        <hr></hr>\n        <Grid container className={classes.root} spacing={0} justify=\"center\" alignItems=\"center\" direction=\"column\">\n          <Typography variant=\"h4\" component=\"h4\" className={classes.title}>{user.description}</Typography>\n        </Grid>\n        <hr></hr>\n        <Grid container className={classes.root} spacing={0} justify=\"center\" alignItems=\"center\" direction=\"column\">\n          <PaymentForm data={public_key}/>\n        </Grid>\n        </div>\n \n    );\n  }\n  ","/Users/matejplavevski/Documents/Projects/GitHub/fundmy.space-react/src/components/profile/elements/payment-form.jsx",["163","164","165","166","167"],"import React from 'react';\nimport Button from '@material-ui/core/Button';\nimport TextField from '@material-ui/core/TextField';\nimport Snackbar from '@material-ui/core/Snackbar';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { useForm } from 'react-hook-form';\nimport Alert from '../../general/alert';\nimport Select from '@material-ui/core/Select';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport FormControl from '@material-ui/core/FormControl';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport albedo from '@albedo-link/intent'\nconst sdk = require(\"stellar-sdk\");\n\nexport default function PaymentForm(props) {\n    const [open, setOpen] = React.useState(false);\n    const [message, setMessage] = React.useState('');\n    const [severity, setSeverity] = React.useState('');\n    const [hiddenFields, setHiddenFields] = React.useState(false);\n    const [select_value, setSelectValue] = React.useState('');\n\n    const handleClose = (event, reason) => {\n        if (reason === 'clickaway') {\n          return;\n        }\n    \n        setOpen(false);\n    };\n\n    const handleChange = (event) => {\n        if(event.target.value == \"other\"){\n            setHiddenFields(true)\n        } else {\n            setHiddenFields(false)\n        }\n        setSelectValue(event.target.value); \n    }\n\n    const useStyles = makeStyles((theme) => ({\n        submit: {\n          margin: theme.spacing(3, 0, 2),\n        },\n        formControl: {\n            margin: theme.spacing(1),\n            minWidth: 120,\n        },\n        hidden: {\n            display: hiddenFields ? 'display' : 'none'  \n        }\n      }));\n\n    const classes = useStyles();\n    const { register, handleSubmit, errors } = useForm();\n\n    const onSubmit = async (data) => {\n        console.log(data)\n        console.log(select_value)\n        let asset = undefined;\n\n        if(data[\"type\"] == \"click\"){\n            return\n        }\n\n        if([\"GCKFBEIYV2U22IO2BJ4KVJOIP7XPWQGQFKKWXR6DOSJBV7STMAQSMTGG\", \"GCZ4N6QHS2XH62CDMDIOQRFL2X3NJWJNMU2OXEKE7SC2UEAENCPL65J3\", \"GCDNJUBQSX7AJWLJACMJ7I4BC3Z47BQUTMHEICZLE6MU4KQBRYG5JY6B\"].indexOf(select_value) != -1){\n            const pairs = {\n                \"GCKFBEIYV2U22IO2BJ4KVJOIP7XPWQGQFKKWXR6DOSJBV7STMAQSMTGG\": \"USD\",\n                \"GCZ4N6QHS2XH62CDMDIOQRFL2X3NJWJNMU2OXEKE7SC2UEAENCPL65J3\":\"EUR\",\n                \"GCDNJUBQSX7AJWLJACMJ7I4BC3Z47BQUTMHEICZLE6MU4KQBRYG5JY6B\":\"SRT\"\n            } // Ugly\n            asset = new sdk.Asset(pairs[select_value], select_value)\n        } \n        else if(select_value == 'native'){\n            asset = sdk.Asset.native()\n        } else {\n            try{\n                asset = new sdk.Asset(data[\"Asset\"], data[\"Asset Issuer\"])\n            } catch (err) {\n                setSeverity(\"error\")\n                setMessage(`Asset information incomplete! Make sure you filled out all fields.`)\n                setOpen(true)   \n                return\n            }\n            \n        }\n\n\n        console.log(props.data[\"public_key\"])\n        albedo.publicKey({\n            token: 'sRqeood+3eD9SO8iDlLqIp+T0D3b+rjUAKhlyfSAk2Y='\n        }).then(async(res) => {\n            console.log(res.pubkey, res.signed_message, res.signature)\n\n            var server = new sdk.Server('https://horizon-testnet.stellar.org');\n            const account = await server.loadAccount(res.pubkey);\n            const fee = await server.fetchBaseFee();\n            let transaction = undefined\n            try {\n                transaction = new sdk.TransactionBuilder(account, { fee, networkPassphrase: sdk.Networks.TESTNET })\n            .addOperation(\n                // this operation funds the new account with XLM\n                sdk.Operation.createClaimableBalance({\n                    claimants: [\n                        new sdk.Claimant(`${props.data[\"public_key\"]}`, sdk.Claimant.predicateUnconditional()),\n                    ],\n                    asset: asset,\n                    amount: `${data['Amount']}`\n                })\n            )\n            .setTimeout(30)\n            .build();\n        } catch (e) {\n            setSeverity(\"error\")\n            setMessage(`Failed to build transaction! ${e}`)\n            setOpen(true) \n            return\n        }\n\n        albedo.tx({\n            xdr: `${transaction.toXDR()}`,\n            network: 'testnet',\n            submit: true\n        })\n            .then(res => \n                {\n                    console.log(res.xdr, res.tx_hash, res.signed_envelope_xdr, res.network, res.result)\n                    setSeverity(\"success\")\n                    setMessage(`Transfer successful! You can view the transaction at: https://stellar.expert/explorer/testnet/tx/${res.tx_hash}`)\n                    setOpen(true)\n                }).catch(res => {\n                    setSeverity(\"error\")\n                    setMessage(`Transaction failed! ${res[\"message\"]}`)\n                    setOpen(true)\n                })\n                \n        }).catch(res => {\n            setSeverity(\"error\")\n            setMessage(`Transaction failed! ${res[\"message\"]}`)\n            setOpen(true)\n        })\n\n        \n    };\n\n  return (\n    <form className={classes.form} onSubmit={handleSubmit(onSubmit)}>\n    <FormControl variant=\"filled\" className={classes.formControl}>\n    <InputLabel id=\"demo-simple-select\">Asset</InputLabel>\n    <Select\n          labelId=\"demo-simple-select-outlined-label\"\n          id=\"asseet_select\"\n          value={select_value}\n          onChange={handleChange}\n          label=\"Asset\"\n          name=\"Asset-select\"\n          inputRef={register({ required: true, name: \"select_asset\"})}\n        >\n          <MenuItem value=\"native\">\n            <em>XLM</em>\n          </MenuItem>\n          <MenuItem key=\"USD\" value={\"GCKFBEIYV2U22IO2BJ4KVJOIP7XPWQGQFKKWXR6DOSJBV7STMAQSMTGG\"}>USD</MenuItem>\n          <MenuItem key=\"EUR\" value={\"GCZ4N6QHS2XH62CDMDIOQRFL2X3NJWJNMU2OXEKE7SC2UEAENCPL65J3\"}>EUR</MenuItem>\n          <MenuItem key=\"SRT\" value={\"GCDNJUBQSX7AJWLJACMJ7I4BC3Z47BQUTMHEICZLE6MU4KQBRYG5JY6B\"}>SRT</MenuItem>\n          <MenuItem value={\"other\"}>Other</MenuItem>\n        </Select>\n    </FormControl>\n    <TextField\n        variant=\"outlined\"\n        margin=\"normal\"\n        fullWidth\n        id=\"username\"\n        label=\"Asset\"\n        name=\"Asset\"\n        autoComplete=\"asset\"\n        autoFocus\n        className={classes.hidden}\n        inputRef={register({ required: false})}\n    />\n    <TextField\n        variant=\"outlined\"\n        margin=\"normal\"\n        fullWidth\n        name=\"Asset Issuer\"\n        label=\"Asset Issuer\"\n        type=\"text\"\n        id=\"asset_issuer\"\n        autoComplete=\"asset_issuer\"\n        className={classes.hidden}\n        inputRef={register({ required: false})}\n    />\n    <TextField\n        variant=\"outlined\"\n        margin=\"normal\"\n        required\n        fullWidth\n        name=\"Amount\"\n        label=\"Amount\"\n        type=\"number\"\n        id=\"amount\"\n        autoComplete=\"amount\"\n        inputRef={register({ required: true})}\n    />\n    <Button\n        fullWidth\n        type=\"submit\"\n        variant=\"contained\"\n        color=\"primary\"\n        className={classes.submit}\n        onClick={onSubmit}\n    >\n        Fund with Albedo\n    </Button>\n    <Snackbar open={open} autoHideDuration={6000} onClose={handleClose}>\n        <Alert onClose={handleClose} severity={severity}>\n            { message }\n        </Alert>\n    </Snackbar>\n    </form>\n            \n  );\n}\n","/Users/matejplavevski/Documents/Projects/GitHub/fundmy.space-react/src/components/requests/get_user_public_key.js",[],"/Users/matejplavevski/Documents/Projects/GitHub/fundmy.space-react/src/components/requests/logout.js",["168"],"export default async function logoutRequest (data){\n    return fetch('http://127.0.0.1:8000/api/v1/rest-auth/logout/', {\n        method: 'POST',\n        body: JSON.stringify(data),\n        headers: {\n            'Content-Type': 'application/json'\n        },\n        credentials: 'include'\n    }).then((response) => { \n        return response.json().then((data) => {\n            console.log('Success:', data);\n            if(data[\"detail\"] == \"Successfully logged out.\"){\n                return [true, data[\"detail\"]]\n              } else {\n                return [false, \"There was an error\"]\n              }\n        }).catch((error) => {\n            console.error('Error:', error);\n            return [false, error]\n        }) \n    });\n}",["169","170"],{"ruleId":"171","severity":1,"message":"172","line":2,"column":8,"nodeType":"173","messageId":"174","endLine":2,"endColumn":12},{"ruleId":"171","severity":1,"message":"175","line":7,"column":42,"nodeType":"173","messageId":"174","endLine":7,"endColumn":50},{"ruleId":"171","severity":1,"message":"176","line":9,"column":8,"nodeType":"173","messageId":"174","endLine":9,"endColumn":14},{"ruleId":"171","severity":1,"message":"177","line":10,"column":8,"nodeType":"173","messageId":"174","endLine":10,"endColumn":24},{"ruleId":"171","severity":1,"message":"178","line":17,"column":24,"nodeType":"173","messageId":"174","endLine":17,"endColumn":36},{"ruleId":"171","severity":1,"message":"179","line":42,"column":6,"nodeType":"173","messageId":"174","endLine":42,"endColumn":12},{"ruleId":"180","severity":1,"message":"181","line":44,"column":14,"nodeType":"173","messageId":"182","endLine":44,"endColumn":20},{"ruleId":"183","severity":1,"message":"184","line":16,"column":26,"nodeType":"185","messageId":"186","endLine":16,"endColumn":28},{"ruleId":"183","severity":1,"message":"184","line":25,"column":26,"nodeType":"185","messageId":"186","endLine":25,"endColumn":28},{"ruleId":"171","severity":1,"message":"187","line":80,"column":12,"nodeType":"173","messageId":"174","endLine":80,"endColumn":20},{"ruleId":"171","severity":1,"message":"179","line":88,"column":16,"nodeType":"173","messageId":"174","endLine":88,"endColumn":22},{"ruleId":"171","severity":1,"message":"179","line":95,"column":16,"nodeType":"173","messageId":"174","endLine":95,"endColumn":22},{"ruleId":"171","severity":1,"message":"179","line":102,"column":16,"nodeType":"173","messageId":"174","endLine":102,"endColumn":22},{"ruleId":"188","replacedBy":"189"},{"ruleId":"190","replacedBy":"191"},{"ruleId":"171","severity":1,"message":"192","line":30,"column":12,"nodeType":"173","messageId":"174","endLine":30,"endColumn":16},{"ruleId":"171","severity":1,"message":"193","line":34,"column":12,"nodeType":"173","messageId":"174","endLine":34,"endColumn":22},{"ruleId":"171","severity":1,"message":"194","line":36,"column":11,"nodeType":"173","messageId":"174","endLine":36,"endColumn":23},{"ruleId":"171","severity":1,"message":"195","line":5,"column":8,"nodeType":"173","messageId":"174","endLine":5,"endColumn":16},{"ruleId":"171","severity":1,"message":"196","line":36,"column":35,"nodeType":"173","messageId":"174","endLine":36,"endColumn":41},{"ruleId":"188","replacedBy":"197"},{"ruleId":"190","replacedBy":"198"},{"ruleId":"188","replacedBy":"199"},{"ruleId":"190","replacedBy":"200"},{"ruleId":"171","severity":1,"message":"196","line":36,"column":37,"nodeType":"173","messageId":"174","endLine":36,"endColumn":43},{"ruleId":"188","replacedBy":"201"},{"ruleId":"190","replacedBy":"202"},{"ruleId":"188","replacedBy":"203"},{"ruleId":"190","replacedBy":"204"},{"ruleId":"188","replacedBy":"205"},{"ruleId":"190","replacedBy":"206"},{"ruleId":"188","replacedBy":"207"},{"ruleId":"190","replacedBy":"208"},{"ruleId":"188","replacedBy":"209"},{"ruleId":"190","replacedBy":"210"},{"ruleId":"171","severity":1,"message":"211","line":10,"column":8,"nodeType":"173","messageId":"174","endLine":10,"endColumn":14},{"ruleId":"171","severity":1,"message":"212","line":11,"column":8,"nodeType":"173","messageId":"174","endLine":11,"endColumn":12},{"ruleId":"171","severity":1,"message":"212","line":5,"column":8,"nodeType":"173","messageId":"174","endLine":5,"endColumn":12},{"ruleId":"171","severity":1,"message":"179","line":50,"column":20,"nodeType":"173","messageId":"174","endLine":50,"endColumn":26},{"ruleId":"171","severity":1,"message":"179","line":56,"column":16,"nodeType":"173","messageId":"174","endLine":56,"endColumn":22},{"ruleId":"213","severity":1,"message":"214","line":62,"column":8,"nodeType":"215","endLine":62,"endColumn":10,"suggestions":"216"},{"ruleId":"183","severity":1,"message":"217","line":31,"column":31,"nodeType":"185","messageId":"186","endLine":31,"endColumn":33},{"ruleId":"171","severity":1,"message":"196","line":53,"column":37,"nodeType":"173","messageId":"174","endLine":53,"endColumn":43},{"ruleId":"183","severity":1,"message":"217","line":60,"column":25,"nodeType":"185","messageId":"186","endLine":60,"endColumn":27},{"ruleId":"183","severity":1,"message":"184","line":64,"column":215,"nodeType":"185","messageId":"186","endLine":64,"endColumn":217},{"ruleId":"183","severity":1,"message":"217","line":72,"column":30,"nodeType":"185","messageId":"186","endLine":72,"endColumn":32},{"ruleId":"183","severity":1,"message":"217","line":12,"column":31,"nodeType":"185","messageId":"186","endLine":12,"endColumn":33},{"ruleId":"188","replacedBy":"218"},{"ruleId":"190","replacedBy":"219"},"no-unused-vars","'logo' is defined but never used.","Identifier","unusedVar","'Redirect' is defined but never used.","'Navbar' is defined but never used.","'CircularProgress' is defined but never used.","'responseText' is assigned a value but never used.","'status' is assigned a value but never used.","no-self-assign","'status' is assigned to itself.","selfAssignment","eqeqeq","Expected '!==' and instead saw '!='.","BinaryExpression","unexpected","'isLoaded' is assigned a value but never used.","no-native-reassign",["220"],"no-negated-in-lhs",["221"],"'auth' is assigned a value but never used.","'open_alert' is assigned a value but never used.","'handleChange' is assigned a value but never used.","'MuiAlert' is defined but never used.","'errors' is assigned a value but never used.",["220"],["221"],["220"],["221"],["220"],["221"],["220"],["221"],["220"],["221"],["220"],["221"],["220"],["221"],"'Button' is defined but never used.","'Link' is defined but never used.","react-hooks/exhaustive-deps","React Hook React.useEffect has a missing dependency: 'username'. Either include it or remove the dependency array.","ArrayExpression",["222"],"Expected '===' and instead saw '=='.",["220"],["221"],"no-global-assign","no-unsafe-negation",{"desc":"223","fix":"224"},"Update the dependencies array to be: [username]",{"range":"225","text":"226"},[1866,1868],"[username]"]