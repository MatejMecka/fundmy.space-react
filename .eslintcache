[{"/Users/matejplavevski/Documents/Projects/GitHub/fundmy.space-react/src/App.js":"1","/Users/matejplavevski/Documents/Projects/GitHub/fundmy.space-react/src/components/authentication/authentication.jsx":"2","/Users/matejplavevski/Documents/Projects/GitHub/fundmy.space-react/src/components/dashboard/elements/appbar.jsx":"3","/Users/matejplavevski/Documents/Projects/GitHub/fundmy.space-react/src/components/authentication/SignUp.jsx":"4","/Users/matejplavevski/Documents/Projects/GitHub/fundmy.space-react/src/components/dashboard/elements/not-found.jsx":"5","/Users/matejplavevski/Documents/Projects/GitHub/fundmy.space-react/src/components/requests/balances.js":"6","/Users/matejplavevski/Documents/Projects/GitHub/fundmy.space-react/src/components/requests/profile.js":"7","/Users/matejplavevski/Documents/Projects/GitHub/fundmy.space-react/src/components/requests/logout.js":"8","/Users/matejplavevski/Documents/Projects/GitHub/fundmy.space-react/src/components/setup/elements/ProfileInfo.jsx":"9","/Users/matejplavevski/Documents/Projects/GitHub/fundmy.space-react/src/components/requests/login.js":"10","/Users/matejplavevski/Documents/Projects/GitHub/fundmy.space-react/src/components/profile/profile.jsx":"11","/Users/matejplavevski/Documents/Projects/GitHub/fundmy.space-react/src/components/profile/elements/payment-form.jsx":"12","/Users/matejplavevski/Documents/Projects/GitHub/fundmy.space-react/src/components/requests/get_user_public_key.js":"13","/Users/matejplavevski/Documents/Projects/GitHub/fundmy.space-react/src/components/error_pages/404.jsx":"14","/Users/matejplavevski/Documents/Projects/GitHub/fundmy.space-react/src/components/setup/setup.jsx":"15","/Users/matejplavevski/Documents/Projects/GitHub/fundmy.space-react/src/components/dashboard/elements/claimable_balances_table.jsx":"16","/Users/matejplavevski/Documents/Projects/GitHub/fundmy.space-react/src/components/requests/operations.js":"17","/Users/matejplavevski/Documents/Projects/GitHub/fundmy.space-react/src/components/general/alert.jsx":"18","/Users/matejplavevski/Documents/Projects/GitHub/fundmy.space-react/src/components/setup/elements/PaymentForm.jsx":"19","/Users/matejplavevski/Documents/Projects/GitHub/fundmy.space-react/src/components/requests/userinfo.js":"20","/Users/matejplavevski/Documents/Projects/GitHub/fundmy.space-react/src/components/dashboard/elements/currency_card.jsx":"21","/Users/matejplavevski/Documents/Projects/GitHub/fundmy.space-react/src/components/dashboard/elements/operations_table.jsx":"22","/Users/matejplavevski/Documents/Projects/GitHub/fundmy.space-react/src/components/requests/signup.js":"23","/Users/matejplavevski/Documents/Projects/GitHub/fundmy.space-react/src/components/requests/claimable_balances.js":"24","/Users/matejplavevski/Documents/Projects/GitHub/fundmy.space-react/src/components/settings/settings.jsx":"25","/Users/matejplavevski/Documents/Projects/GitHub/fundmy.space-react/src/components/settings/elements/basic_user_info.jsx":"26","/Users/matejplavevski/Documents/Projects/GitHub/fundmy.space-react/src/components/authentication/Login.jsx":"27","/Users/matejplavevski/Documents/Projects/GitHub/fundmy.space-react/src/components/general/copyright.jsx":"28","/Users/matejplavevski/Documents/Projects/GitHub/fundmy.space-react/src/protected_route.jsx":"29"},{"size":1938,"mtime":1615922899248,"results":"30","hashOfConfig":"31"},{"size":2580,"mtime":1611659067015,"results":"32","hashOfConfig":"31"},{"size":3526,"mtime":1615891248975,"results":"33","hashOfConfig":"31"},{"size":4037,"mtime":1611606335084,"results":"34","hashOfConfig":"31"},{"size":1087,"mtime":1613990055688,"results":"35","hashOfConfig":"31"},{"size":380,"mtime":1613821750570,"results":"36","hashOfConfig":"31"},{"size":429,"mtime":1615887973518,"results":"37","hashOfConfig":"31"},{"size":738,"mtime":1614710950383,"results":"38","hashOfConfig":"31"},{"size":1640,"mtime":1615913923634,"results":"39","hashOfConfig":"31"},{"size":714,"mtime":1611659845961,"results":"40","hashOfConfig":"31"},{"size":3524,"mtime":1615892220377,"results":"41","hashOfConfig":"31"},{"size":7446,"mtime":1615288790424,"results":"42","hashOfConfig":"31"},{"size":432,"mtime":1615887959124,"results":"43","hashOfConfig":"31"},{"size":344,"mtime":1615890427654,"results":"44","hashOfConfig":"31"},{"size":5448,"mtime":1615914297360,"results":"45","hashOfConfig":"31"},{"size":1635,"mtime":1614169622138,"results":"46","hashOfConfig":"31"},{"size":384,"mtime":1614165649327,"results":"47","hashOfConfig":"31"},{"size":155,"mtime":1611606196725,"results":"48","hashOfConfig":"31"},{"size":1745,"mtime":1615914304847,"results":"49","hashOfConfig":"31"},{"size":547,"mtime":1611655518522,"results":"50","hashOfConfig":"31"},{"size":1134,"mtime":1613853712101,"results":"51","hashOfConfig":"31"},{"size":1946,"mtime":1614170285000,"results":"52","hashOfConfig":"31"},{"size":800,"mtime":1611654895232,"results":"53","hashOfConfig":"31"},{"size":399,"mtime":1614165573775,"results":"54","hashOfConfig":"31"},{"size":2860,"mtime":1615918172737,"results":"55","hashOfConfig":"31"},{"size":1062,"mtime":1615916095466,"results":"56","hashOfConfig":"31"},{"size":2992,"mtime":1614711098446,"results":"57","hashOfConfig":"31"},{"size":436,"mtime":1611509992549,"results":"58","hashOfConfig":"31"},{"size":943,"mtime":1615924210648,"results":"59","hashOfConfig":"31"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"62"},"1s6rir",{"filePath":"63","messages":"64","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"65"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"68","usedDeprecatedRules":"69"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"72","usedDeprecatedRules":"73"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"76","messages":"77","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"73"},{"filePath":"78","messages":"79","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},{"filePath":"81","messages":"82","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"83","usedDeprecatedRules":"84"},{"filePath":"85","messages":"86","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"87","messages":"88","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"89","messages":"90","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"91","usedDeprecatedRules":"69"},{"filePath":"92","messages":"93","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"94","usedDeprecatedRules":"69"},{"filePath":"95","messages":"96","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"69"},{"filePath":"97","messages":"98","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},{"filePath":"99","messages":"100","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"101","usedDeprecatedRules":"69"},{"filePath":"102","messages":"103","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"104","usedDeprecatedRules":"69"},{"filePath":"105","messages":"106","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"107","messages":"108","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"69"},{"filePath":"109","messages":"110","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},{"filePath":"111","messages":"112","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"69"},{"filePath":"113","messages":"114","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},{"filePath":"115","messages":"116","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"69"},{"filePath":"117","messages":"118","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"119","messages":"120","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},{"filePath":"121","messages":"122","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"123","usedDeprecatedRules":"69"},{"filePath":"124","messages":"125","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"69"},{"filePath":"126","messages":"127","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"128","usedDeprecatedRules":"69"},{"filePath":"129","messages":"130","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"131","messages":"132","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"133"},"/Users/matejplavevski/Documents/Projects/GitHub/fundmy.space-react/src/App.js",["134","135","136","137","138"],"import React from 'react';\nimport logo from './logo.svg';\nimport './App.css';\nimport Authentication from './components/authentication/authentication'\nimport Dashboard from './components/dashboard/dashboard';\nimport ProfilePage from './components/profile/profile';\nimport { BrowserRouter as Router, Route, Redirect, Switch } from \"react-router-dom\";\nimport userInfo from './components/requests/userinfo';\nimport Navbar from './components/dashboard/elements/appbar';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport useMediaQuery from '@material-ui/core/useMediaQuery';\nimport { createMuiTheme, ThemeProvider } from '@material-ui/core/styles';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport SetupPage from './components/setup/setup';\nimport SettingsPage from './components/settings/settings';\nimport Page404 from './components/error_pages/404';\nimport PrivateRoute from './protected_route';\n\nfunction App() {\n  const prefersDarkMode = useMediaQuery('(prefers-color-scheme: dark)');\n\n  const theme = React.useMemo(\n    () =>\n      createMuiTheme({\n        palette: {\n          type: prefersDarkMode ? 'dark' : 'light',\n        },\n      }),\n    [prefersDarkMode],\n  );\n\n  const username = \"\"\n\n  return (\n    <ThemeProvider theme={theme}>\n    <CssBaseline />\n    <Router>\n      <div className=\"App\">\n      <Switch>\n        <PrivateRoute exact path=\"/dashboard\" component={() => <Dashboard username={username} /> } />\n        <PrivateRoute exact path=\"/authenticate\" component={Authentication} />\n        <PrivateRoute path=\"/user/:username?\" component={ProfilePage} />\n        <PrivateRoute exact path=\"/settings\" component={SettingsPage} />\n        <PrivateRoute exact path=\"/setup\" component={() => <SetupPage username={username}/>} />\n        <Route exact path=\"/\" />\n        <Route component={Page404} />\n      </Switch>\n      </div>\n    </Router>\n    </ThemeProvider>\n  );\n}\n\nexport default App;\n","/Users/matejplavevski/Documents/Projects/GitHub/fundmy.space-react/src/components/authentication/authentication.jsx",[],["139","140"],"/Users/matejplavevski/Documents/Projects/GitHub/fundmy.space-react/src/components/dashboard/elements/appbar.jsx",["141","142","143","144","145","146","147","148"],"import React from 'react';\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport Typography from '@material-ui/core/Typography';\nimport { makeStyles } from '@material-ui/core/styles';\nimport IconButton from '@material-ui/core/IconButton';\nimport AccountCircle from '@material-ui/icons/AccountCircle';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport Menu from '@material-ui/core/Menu';\nimport { useHistory } from \"react-router-dom\";\nimport logoutRequest from '../../requests/logout';\nimport Snackbar from '@material-ui/core/Snackbar';\nimport Link from '@material-ui/core/Link';\nimport Alert from '../../general/alert';\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    flexGrow: 1,\n  },\n  menuButton: {\n    marginRight: theme.spacing(2),\n  },\n  title: {\n    flexGrow: 1,\n    textAlign: 'left'\n  },\n}));\n\nexport default function Navbar(props) {\n    const classes = useStyles();\n    const [auth, setAuth] = React.useState(true);\n    const [anchorEl, setAnchorEl] = React.useState(null);\n    const [message, setMessage] = React.useState('');\n    const open = Boolean(anchorEl);\n    const [open_alert, setOpen] = React.useState(false);\n\n    const preventDefault = (event) => event.preventDefault();\n\n    const handleChange = (event) => {\n      setAuth(event.target.checked);\n    };\n  \n    const handleMenu = (event) => {\n      setAnchorEl(event.currentTarget);\n    };\n  \n    const handleClose = () => {\n      setAnchorEl(null);\n    };\n    \n    const history = useHistory();\n/*\n    const logOut = () => {\n      logoutRequest().then(response => {\n        const [status, responseText] = response\n        if(status){\n            history.push('/authenticate')\n        } else {\n            setMessage(responseText)\n            console.log('Message: ' + message)\n            setOpen(true);\n        }\n    }).catch((error) => {\n        console.log(error)\n    })\n    }*/\n\n    return (\n      <div className={classes.root}>\n        <AppBar position=\"static\">\n          <Toolbar>\n            <Typography variant=\"h6\" className={classes.title}>\n            <Link href=\"/dashboard\" color=\"inherit\" >\n              FundMy.space\n              </Link>\n            </Typography>\n              <div>\n                <IconButton\n                  aria-label=\"account of current user\"\n                  aria-controls=\"menu-appbar\"\n                  aria-haspopup=\"true\"\n                  onClick={handleMenu}\n                  color=\"inherit\"\n                >\n                  <AccountCircle />\n                </IconButton>\n                <Menu\n                  id=\"menu-appbar\"\n                  anchorEl={anchorEl}\n                  anchorOrigin={{\n                    vertical: 'top',\n                    horizontal: 'right',\n                  }}\n                  keepMounted\n                  transformOrigin={{\n                    vertical: 'top',\n                    horizontal: 'right',\n                  }}\n                  open={open}\n                  onClose={handleClose}\n                >\n                  <MenuItem component={Link} href={`/user`} >My Profile</MenuItem>\n                  <MenuItem onClick={handleClose}>Settings</MenuItem>\n                  \n                </Menu>\n              </div>\n          </Toolbar>\n        </AppBar>\n        <Snackbar open={open} autoHideDuration={6000} onClose={handleClose}>\n          <Alert onClose={handleClose} severity=\"error\">\n              { message }\n          </Alert>\n        </Snackbar>\n      </div>\n    );\n\n}",["149","150"],"/Users/matejplavevski/Documents/Projects/GitHub/fundmy.space-react/src/components/authentication/SignUp.jsx",["151","152"],"import React from 'react';\nimport Button from '@material-ui/core/Button';\nimport TextField from '@material-ui/core/TextField';\nimport Snackbar from '@material-ui/core/Snackbar';\nimport MuiAlert from '@material-ui/lab/Alert';\nimport Grid from '@material-ui/core/Grid';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { useForm } from 'react-hook-form';\nimport Alert from '../general/alert';\nimport signUpRequest from '../requests/signup';\n\nexport default function SignUpSide() {\n    const [open, setOpen] = React.useState(false);\n    const [message, setMessage] = React.useState('');\n\n    const handleClose = (event, reason) => {\n        if (reason === 'clickaway') {\n          return;\n        }\n    \n        setOpen(false);\n    };\n\n\n    const useStyles = makeStyles((theme) => ({\n        form: {\n          width: '100%', // Fix IE 11 issue.\n          marginTop: theme.spacing(1),\n        },\n        submit: {\n          margin: theme.spacing(3, 0, 2),\n        },\n      }));\n\n  const classes = useStyles();\n  const { register, handleSubmit, errors } = useForm();\n\n  const onSubmit = async (data) => {\n    signUpRequest(data).then(response => {\n        const [status, responseText] = response\n        if(!status){\n            setMessage(responseText)\n            console.log('Message: ' + message   )\n            setOpen(true);\n        }\n    }).catch((error) => {\n        console.log(error)\n    })\n    }\n\n  return (\n    <form className={classes.form} onSubmit={handleSubmit(onSubmit)}>\n          <Grid container spacing={2}>\n            <Grid item xs={12}>\n            <TextField\n                    autoComplete=\"username\"\n                    name=\"username\"\n                    variant=\"outlined\"\n                    required\n                    fullWidth\n                    id=\"firstName\"\n                    label=\"Username\"\n                    autoFocus\n                    inputRef={register({ required: true})}\n                />\n            </Grid>\n            <Grid item xs={12} sm={6}>\n              <TextField\n                autoComplete=\"fname\"\n                name=\"first_name\"\n                variant=\"outlined\"\n                required\n                fullWidth\n                id=\"firstName\"\n                label=\"First name\"\n                autoFocus\n                inputRef={register({ required: true})}\n              />\n            </Grid>\n            <Grid item xs={12} sm={6}>\n              <TextField\n                variant=\"outlined\"\n                required\n                fullWidth\n                id=\"lastName\"\n                label=\"Last name\"\n                name=\"last_name\"\n                autoComplete=\"lname\"\n                inputRef={register({ required: true})}\n              />\n            </Grid>\n            <Grid item xs={12}>\n              <TextField\n                variant=\"outlined\"\n                required\n                fullWidth\n                id=\"email\"\n                label=\"Email address\"\n                name=\"email\"\n                autoComplete=\"email\"\n                type=\"email\"\n                inputRef={register({ required: true})}\n              />\n            </Grid>\n            <Grid item xs={12}>\n              <TextField\n                variant=\"outlined\"\n                required\n                fullWidth\n                name=\"password1\"\n                label=\"Password\"\n                type=\"password\"\n                id=\"password\"\n                autoComplete=\"current-password\"\n                inputRef={register({ required: true})}\n              />\n            </Grid>\n          </Grid>\n          <Button\n            type=\"submit\"\n            fullWidth\n            variant=\"contained\"\n            color=\"primary\"\n            className={classes.submit}\n          >\n            Sign Up\n          </Button>\n          <Snackbar open={open} autoHideDuration={6000} onClose={handleClose}>\n                <Alert onClose={handleClose} severity=\"error\">\n                    { message }\n                </Alert>\n            </Snackbar>\n        </form>\n  );\n}\n",["153","154"],"/Users/matejplavevski/Documents/Projects/GitHub/fundmy.space-react/src/components/dashboard/elements/not-found.jsx",[],"/Users/matejplavevski/Documents/Projects/GitHub/fundmy.space-react/src/components/requests/balances.js",[],"/Users/matejplavevski/Documents/Projects/GitHub/fundmy.space-react/src/components/requests/profile.js",[],["155","156"],"/Users/matejplavevski/Documents/Projects/GitHub/fundmy.space-react/src/components/requests/logout.js",["157"],"export default async function logoutRequest (data){\n    return fetch('http://127.0.0.1:8000/api/v1/rest-auth/logout/', {\n        method: 'POST',\n        body: JSON.stringify(data),\n        headers: {\n            'Content-Type': 'application/json'\n        },\n        credentials: 'include'\n    }).then((response) => { \n        return response.json().then((data) => {\n            console.log('Success:', data);\n            if(data[\"detail\"] == \"Successfully logged out.\"){\n                return [true, data[\"detail\"]]\n              } else {\n                return [false, \"There was an error\"]\n              }\n        }).catch((error) => {\n            console.error('Error:', error);\n            return [false, error]\n        }) \n    });\n}",["158","159"],"/Users/matejplavevski/Documents/Projects/GitHub/fundmy.space-react/src/components/setup/elements/ProfileInfo.jsx",["160"],"/Users/matejplavevski/Documents/Projects/GitHub/fundmy.space-react/src/components/requests/login.js",[],"/Users/matejplavevski/Documents/Projects/GitHub/fundmy.space-react/src/components/profile/profile.jsx",["161","162","163","164","165"],"import React from 'react';\nimport Grid from '@material-ui/core/Grid';\nimport Typography from '@material-ui/core/Typography';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Link from '@material-ui/core/Link';\nimport profileRequest from '../requests/profile';\nimport {useParams} from 'react-router-dom'; \nimport Avatar from '@material-ui/core/Avatar';\nimport { deepOrange, deepPurple } from '@material-ui/core/colors';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport Navbar from '../dashboard/elements/appbar';\nimport PaymentForm from './elements/payment-form';\nimport profilePublicKey from '../requests/get_user_public_key';\nimport loggedIn from '../requests/get_user_public_key';\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    display: 'flex',\n    '& > *': {\n      margin: theme.spacing(1),\n    },\n  },\n  orange: {\n    color: theme.palette.getContrastText(deepOrange[500]),\n    backgroundColor: deepOrange[500],\n  },\n  purple: {\n    color: theme.palette.getContrastText(deepPurple[500]),\n    backgroundColor: deepPurple[500],\n  },\n  large: {\n    width: theme.spacing(7),\n    height: theme.spacing(7),\n  },\n  title: {\n    textAlign: 'left',\n    paddingTop: \"25px\"\n  },\n}));\n\nexport default function ProfilePage(props) {\n    let {username} = useParams()\n\n    if(username === undefined){\n      username = \"\"\n    }\n\n    const classes = useStyles();\n\n    const [user, setUser] = React.useState({});\n    const [public_key, setPublicKey] = React.useState({});\n    const [isLoading, setLoading] = React.useState(false);\n    \n    React.useEffect(() => {\n      profileRequest(username).then(data => {\n          let [status, responseText] = data\n          if(username === \"\"){\n            responseText = data[1][0]\n          }\n          setUser(responseText);\n          console.log(responseText);\n      })\n\n      profilePublicKey(username).then(data => {\n        let [status, responseText] = data\n        if(username === \"\"){\n          responseText = data[0]\n        }\n        setPublicKey(responseText);\n        console.log(responseText);\n        setLoading(true);\n      })\n    \n    }, [])\n\n    console.log(\"USER\")\n    console.log(user)\n\n    return (\n        <div>\n        <Navbar loggedIn={true} username={props.username}/>\n        <Grid container className={classes.root} spacing={0} justify=\"center\" alignItems=\"center\" direction=\"column\">\n          {\n            isLoading ? \n            <Grid container item direction=\"column\" justify=\"center\" alignItems=\"center\">\n            <Avatar className={`${classes.purple} ${classes.large}`}>\n                {`${user.accountId.first_name[0]}${user.accountId.last_name[0]}`}\n            </Avatar>\n            <Typography variant=\"h4\" component=\"h4\" className={classes.title}>{`${user.accountId.first_name} ${user.accountId.last_name}`}</Typography>\n            <Typography variant=\"h4\" component=\"h4\" className={classes.title}>{user.short_description}</Typography>\n            </Grid>\n            : <CircularProgress />  \n          }\n        </Grid>\n        <hr></hr>\n        <Grid container className={classes.root} spacing={0} justify=\"center\" alignItems=\"center\" direction=\"column\">\n          <Typography variant=\"h4\" component=\"h4\" className={classes.title}>{user.description}</Typography>\n        </Grid>\n        <hr></hr>\n        <Grid container className={classes.root} spacing={0} justify=\"center\" alignItems=\"center\" direction=\"column\">\n          <PaymentForm data={public_key}/>\n        </Grid>\n        </div>\n \n    );\n  }\n  ","/Users/matejplavevski/Documents/Projects/GitHub/fundmy.space-react/src/components/profile/elements/payment-form.jsx",["166","167","168","169","170"],"import React from 'react';\nimport Button from '@material-ui/core/Button';\nimport TextField from '@material-ui/core/TextField';\nimport Snackbar from '@material-ui/core/Snackbar';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { useForm } from 'react-hook-form';\nimport Alert from '../../general/alert';\nimport Select from '@material-ui/core/Select';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport FormControl from '@material-ui/core/FormControl';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport albedo from '@albedo-link/intent'\nconst sdk = require(\"stellar-sdk\");\n\nexport default function PaymentForm(props) {\n    const [open, setOpen] = React.useState(false);\n    const [message, setMessage] = React.useState('');\n    const [severity, setSeverity] = React.useState('');\n    const [hiddenFields, setHiddenFields] = React.useState(false);\n    const [select_value, setSelectValue] = React.useState('');\n\n    const handleClose = (event, reason) => {\n        if (reason === 'clickaway') {\n          return;\n        }\n    \n        setOpen(false);\n    };\n\n    const handleChange = (event) => {\n        if(event.target.value == \"other\"){\n            setHiddenFields(true)\n        } else {\n            setHiddenFields(false)\n        }\n        setSelectValue(event.target.value); \n    }\n\n    const useStyles = makeStyles((theme) => ({\n        submit: {\n          margin: theme.spacing(3, 0, 2),\n        },\n        formControl: {\n            margin: theme.spacing(1),\n            minWidth: 120,\n        },\n        hidden: {\n            display: hiddenFields ? 'display' : 'none'  \n        }\n      }));\n\n    const classes = useStyles();\n    const { register, handleSubmit, errors } = useForm();\n\n    const onSubmit = async (data) => {\n        console.log(data)\n        console.log(select_value)\n        let asset = undefined;\n\n        if(data[\"type\"] == \"click\"){\n            return\n        }\n\n        if([\"GCKFBEIYV2U22IO2BJ4KVJOIP7XPWQGQFKKWXR6DOSJBV7STMAQSMTGG\", \"GCZ4N6QHS2XH62CDMDIOQRFL2X3NJWJNMU2OXEKE7SC2UEAENCPL65J3\", \"GCDNJUBQSX7AJWLJACMJ7I4BC3Z47BQUTMHEICZLE6MU4KQBRYG5JY6B\"].indexOf(select_value) != -1){\n            const pairs = {\n                \"GCKFBEIYV2U22IO2BJ4KVJOIP7XPWQGQFKKWXR6DOSJBV7STMAQSMTGG\": \"USD\",\n                \"GCZ4N6QHS2XH62CDMDIOQRFL2X3NJWJNMU2OXEKE7SC2UEAENCPL65J3\":\"EUR\",\n                \"GCDNJUBQSX7AJWLJACMJ7I4BC3Z47BQUTMHEICZLE6MU4KQBRYG5JY6B\":\"SRT\"\n            } // Ugly\n            asset = new sdk.Asset(pairs[select_value], select_value)\n        } \n        else if(select_value == 'native'){\n            asset = sdk.Asset.native()\n        } else {\n            try{\n                asset = new sdk.Asset(data[\"Asset\"], data[\"Asset Issuer\"])\n            } catch (err) {\n                setSeverity(\"error\")\n                setMessage(`Asset information incomplete! Make sure you filled out all fields.`)\n                setOpen(true)   \n                return\n            }\n            \n        }\n\n        console.log(props.data[\"public_key\"])\n        albedo.publicKey({\n            token: 'sRqeood+3eD9SO8iDlLqIp+T0D3b+rjUAKhlyfSAk2Y='\n        }).then(async(res) => {\n            console.log(res.pubkey, res.signed_message, res.signature)\n\n            var server = new sdk.Server('https://horizon-testnet.stellar.org');\n            const account = await server.loadAccount(res.pubkey);\n            const fee = await server.fetchBaseFee();\n            let transaction = undefined\n            try {\n                transaction = new sdk.TransactionBuilder(account, { fee, networkPassphrase: sdk.Networks.TESTNET })\n            .addOperation(\n                // this operation funds the new account with XLM\n                sdk.Operation.createClaimableBalance({\n                    claimants: [\n                        new sdk.Claimant(`${props.data[\"public_key\"]}`, sdk.Claimant.predicateUnconditional()),\n                    ],\n                    asset: asset,\n                    amount: `${data['Amount']}`\n                })\n            )\n            .setTimeout(30)\n            .build();\n        } catch (e) {\n            setSeverity(\"error\")\n            setMessage(`Failed to build transaction! ${e}`)\n            setOpen(true) \n            return\n        }\n\n        albedo.tx({\n            xdr: `${transaction.toXDR()}`,\n            network: 'testnet',\n            submit: true\n        })\n            .then(res => \n                {\n                    console.log(res.xdr, res.tx_hash, res.signed_envelope_xdr, res.network, res.result)\n                    setSeverity(\"success\")\n                    setMessage(`Transfer successful! You can view the transaction at: https://stellar.expert/explorer/testnet/tx/${res.tx_hash}`)\n                    setOpen(true)\n                }).catch(res => {\n                    setSeverity(\"error\")\n                    setMessage(`Transaction failed! ${res[\"message\"]}`)\n                    setOpen(true)\n                })\n                \n        }).catch(res => {\n            setSeverity(\"error\")\n            setMessage(`Transaction failed! ${res[\"message\"]}`)\n            setOpen(true)\n        })\n\n        \n    };\n\n  return (\n    <form className={classes.form} onSubmit={handleSubmit(onSubmit)}>\n    <FormControl variant=\"filled\" className={classes.formControl}>\n    <InputLabel id=\"demo-simple-select\">Asset</InputLabel>\n    <Select\n          labelId=\"demo-simple-select-outlined-label\"\n          id=\"asseet_select\"\n          value={select_value}\n          onChange={handleChange}\n          label=\"Asset\"\n          name=\"Asset-select\"\n          inputRef={register({ required: true, name: \"select_asset\"})}\n        >\n          <MenuItem value=\"native\">\n            <em>XLM</em>\n          </MenuItem>\n          <MenuItem key=\"USD\" value={\"GCKFBEIYV2U22IO2BJ4KVJOIP7XPWQGQFKKWXR6DOSJBV7STMAQSMTGG\"}>USD</MenuItem>\n          <MenuItem key=\"EUR\" value={\"GCZ4N6QHS2XH62CDMDIOQRFL2X3NJWJNMU2OXEKE7SC2UEAENCPL65J3\"}>EUR</MenuItem>\n          <MenuItem key=\"SRT\" value={\"GCDNJUBQSX7AJWLJACMJ7I4BC3Z47BQUTMHEICZLE6MU4KQBRYG5JY6B\"}>SRT</MenuItem>\n          <MenuItem value={\"other\"}>Other</MenuItem>\n        </Select>\n    </FormControl>\n    <TextField\n        variant=\"outlined\"\n        margin=\"normal\"\n        fullWidth\n        id=\"username\"\n        label=\"Asset\"\n        name=\"Asset\"\n        autoComplete=\"asset\"\n        autoFocus\n        className={classes.hidden}\n        inputRef={register({ required: false})}\n    />\n    <TextField\n        variant=\"outlined\"\n        margin=\"normal\"\n        fullWidth\n        name=\"Asset Issuer\"\n        label=\"Asset Issuer\"\n        type=\"text\"\n        id=\"asset_issuer\"\n        autoComplete=\"asset_issuer\"\n        className={classes.hidden}\n        inputRef={register({ required: false})}\n    />\n    <TextField\n        variant=\"outlined\"\n        margin=\"normal\"\n        required\n        fullWidth\n        name=\"Amount\"\n        label=\"Amount\"\n        type=\"number\"\n        id=\"amount\"\n        autoComplete=\"amount\"\n        inputRef={register({ required: true})}\n    />\n    <Button\n        fullWidth\n        type=\"submit\"\n        variant=\"contained\"\n        color=\"primary\"\n        className={classes.submit}\n        onClick={onSubmit}\n    >\n        Fund with Albedo\n    </Button>\n    <Snackbar open={open} autoHideDuration={6000} onClose={handleClose}>\n        <Alert onClose={handleClose} severity={severity}>\n            { message }\n        </Alert>\n    </Snackbar>\n    </form>\n            \n  );\n}\n","/Users/matejplavevski/Documents/Projects/GitHub/fundmy.space-react/src/components/requests/get_user_public_key.js",[],"/Users/matejplavevski/Documents/Projects/GitHub/fundmy.space-react/src/components/error_pages/404.jsx",[],"/Users/matejplavevski/Documents/Projects/GitHub/fundmy.space-react/src/components/setup/setup.jsx",["171","172","173","174"],"import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport Paper from '@material-ui/core/Paper';\nimport Stepper from '@material-ui/core/Stepper';\nimport Step from '@material-ui/core/Step';\nimport StepLabel from '@material-ui/core/StepLabel';\nimport Button from '@material-ui/core/Button';\nimport Link from '@material-ui/core/Link';\nimport Typography from '@material-ui/core/Typography';\nimport PaymentForm from './elements/PaymentForm';\nimport Copyright from '../general/copyright';\nimport ProfileInfo from './elements/ProfileInfo';\n//import updateProfileRequest from '../requests/update_profile.js';\n\nconst useStyles = makeStyles((theme) => ({\n  appBar: {\n    position: 'relative',\n  },\n  layout: {\n    width: 'auto',\n    marginLeft: theme.spacing(2),\n    marginRight: theme.spacing(2),\n    [theme.breakpoints.up(600 + theme.spacing(2) * 2)]: {\n      width: 600,\n      marginLeft: 'auto',\n      marginRight: 'auto',\n    },\n  },\n  paper: {\n    marginTop: theme.spacing(3),\n    marginBottom: theme.spacing(3),\n    padding: theme.spacing(2),\n    [theme.breakpoints.up(600 + theme.spacing(3) * 2)]: {\n      marginTop: theme.spacing(6),\n      marginBottom: theme.spacing(6),\n      padding: theme.spacing(3),\n    },\n  },\n  stepper: {\n    padding: theme.spacing(3, 0, 5),\n  },\n  buttons: {\n    display: 'flex',\n    justifyContent: 'flex-end',\n  },\n  button: {\n    marginTop: theme.spacing(3),\n    marginLeft: theme.spacing(1),\n  },\n}));\n\nconst steps = ['Profile Information', 'Payment details', 'Review your order'];\n\nexport default function SetupPage(props) {\n  const classes = useStyles();\n  const [activeStep, setActiveStep] = React.useState(0);\n  const [values, setValues] = React.useState({short_description: '', description: '', twitter_profile: ''});\n  const [public_key, setPublicKey] = React.useState('')\n\n  function getStepContent(step) {\n    switch (step) {\n      case 0:\n        return (\n          <div>\n          <Typography variant=\"h6\" gutterBottom>\n            Information about yourself\n          </Typography>\n          <ProfileInfo onChange = {handleProfleInfoForm} values = {values} />\n        </div>\n        );\n      case 1:\n        return (\n          <div>\n            <Typography variant=\"h6\" gutterBottom>\n             Payment Information\n            </Typography>\n            <PaymentForm onChange = {handlePaymentForm} />\n          </div>\n          );\n      default:\n        throw new Error('Unknown step');\n    }\n  }\n\n\n  const handleNext = () => {\n    if(activeStep == 0) {\n\n    }\n    setActiveStep(activeStep + 1);\n  };\n\n  const handleBack = () => {\n    setActiveStep(activeStep - 1);\n  };\n\n  const handleProfleInfoForm = name => event => {\n    setValues({...values, [name]: event.target.value});\n    console.log(values)\n  }\n\n  const handlePaymentForm = public_key => {\n    setPublicKey(public_key)\n  }\n\n  const isDisabled = function(){\n    console.log(activeStep === 0 && values[\"short_description\"].length === 0 && values[\"description\"].length !== 0)\n    if(activeStep === 0 && values[\"short_description\"].length === 0 || values[\"description\"].length === 0 ){\n      return true\n    } \n    if(activeStep === 1 && public_key.length === 0){\n      return true\n    }\n    return false\n  }\n\n  return (\n    <React.Fragment>\n      <CssBaseline />\n      <AppBar position=\"absolute\" color=\"default\" className={classes.appBar}>\n        <Toolbar>\n          <Typography variant=\"h6\" color=\"inherit\" noWrap>\n            FundMy.Space\n          </Typography>\n        </Toolbar>\n      </AppBar>\n      <main className={classes.layout}>\n        <Paper className={classes.paper}>\n          <Typography component=\"h1\" variant=\"h4\" align=\"center\">\n            Setup\n          </Typography>\n          <Stepper activeStep={activeStep} className={classes.stepper}>\n            {steps.map((label) => (\n              <Step key={label}>\n                <StepLabel>{label}</StepLabel>\n              </Step>\n            ))}\n          </Stepper>\n          <React.Fragment>\n            {activeStep === steps.length ? (\n              <React.Fragment>\n                <Typography variant=\"h5\" gutterBottom>\n                  Setup successful!\n                </Typography>\n                <Typography variant=\"subtitle1\">\n                  Congragulations! You are now ready to use FundMy.space! Welcome to the club.\n                </Typography>\n              </React.Fragment>\n            ) : (\n              <React.Fragment>\n                {getStepContent(activeStep)}\n                <div className={classes.buttons}>\n                  {activeStep !== 0 && (\n                    <Button onClick={handleBack} className={classes.button}>\n                      Back\n                    </Button>\n                  )}\n                  <Button\n                    variant=\"contained\"\n                    color=\"primary\"\n                    onClick={handleNext}\n                    disabled={ isDisabled() ? true : false}\n                    className={classes.button}\n                  >\n                    {activeStep === steps.length - 1 ? 'Finish Setup' : 'Next'}\n                  </Button>\n                </div>\n              </React.Fragment>\n            )}\n          </React.Fragment>\n        </Paper>\n        <Copyright />\n      </main>\n    </React.Fragment>\n  );\n}","/Users/matejplavevski/Documents/Projects/GitHub/fundmy.space-react/src/components/dashboard/elements/claimable_balances_table.jsx",["175","176"],"import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableContainer from '@material-ui/core/TableContainer';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\nimport Paper from '@material-ui/core/Paper';\nimport Button from '@material-ui/core/Button';\nimport Link from '@material-ui/core/Link';\n\nconst useStyles = makeStyles({\n  table: {\n    minWidth: 650,\n  },\n});\n\nexport default function ClaimableBalanceTable(props) {\n  const classes = useStyles();\n  const data = props.data\n  console.log(data)\n\n  return (\n    <TableContainer component={Paper}>\n      <Table className={classes.table} aria-label=\"simple table\">\n        <TableHead>\n          <TableRow>\n            <TableCell>Adress</TableCell>\n            <TableCell align=\"right\">Asset</TableCell>\n            <TableCell align=\"right\">Amount</TableCell>\n            <TableCell align=\"right\">Action</TableCell>\n          </TableRow>\n        </TableHead>\n        <TableBody>\n          {data.map((row) => (\n            <TableRow key={row.id}>\n              <TableCell component=\"th\" scope=\"row\">\n                {row.sponsor}\n              </TableCell>\n              <TableCell align=\"right\">{row.asset}</TableCell>\n              <TableCell align=\"right\">{row.amount}</TableCell>\n              <TableCell align=\"right\">{row.id}</TableCell>\n            </TableRow>\n          ))}\n        </TableBody>\n      </Table>\n    </TableContainer>\n  );\n}","/Users/matejplavevski/Documents/Projects/GitHub/fundmy.space-react/src/components/requests/operations.js",[],"/Users/matejplavevski/Documents/Projects/GitHub/fundmy.space-react/src/components/general/alert.jsx",[],"/Users/matejplavevski/Documents/Projects/GitHub/fundmy.space-react/src/components/setup/elements/PaymentForm.jsx",[],"/Users/matejplavevski/Documents/Projects/GitHub/fundmy.space-react/src/components/requests/userinfo.js",[],"/Users/matejplavevski/Documents/Projects/GitHub/fundmy.space-react/src/components/dashboard/elements/currency_card.jsx",[],"/Users/matejplavevski/Documents/Projects/GitHub/fundmy.space-react/src/components/dashboard/elements/operations_table.jsx",[],"/Users/matejplavevski/Documents/Projects/GitHub/fundmy.space-react/src/components/requests/signup.js",[],"/Users/matejplavevski/Documents/Projects/GitHub/fundmy.space-react/src/components/requests/claimable_balances.js",[],"/Users/matejplavevski/Documents/Projects/GitHub/fundmy.space-react/src/components/settings/settings.jsx",["177","178","179"],"import React from 'react';\nimport Grid from '@material-ui/core/Grid';\nimport Typography from '@material-ui/core/Typography';\nimport Button from '@material-ui/core/Button';\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Navbar from '../dashboard/elements/appbar';\nimport PaymentForm from '../setup/elements/PaymentForm';\nimport ProfileInfo from '../setup/elements/ProfileInfo';\nimport UserInfo from './elements/basic_user_info';\nimport profileRequest from '../requests/profile';\n\nexport default function SettingsPage(props) {\n    const useStyles = makeStyles((theme) => ({\n        root: {\n          minWidth: 275,\n          padding: \"50px\",\n        }, \n        title: {\n            textAlign: 'left',\n            paddingBottom: \"25px\"\n          },\n    \n    }))\n\n    const classes = useStyles();\n    const [values, setValues] = React.useState({short_description: '', description: '', twitter_profile: ''});\n\n    const [isLoaded, setIsLoaded] = React.useState(false);\n    const [balances, setBalances] = React.useState([]);\n\n    console.log(props.user)\n\n    React.useEffect(() => {\n        profileRequest('').then(data => {\n          const [status, responseText] = data\n          setIsLoaded(true);\n          setValues(\n              {\n                short_description:responseText[0][\"short_description\"],\n                description:responseText[0][\"description\"],\n                twitter_profile:responseText[0][\"twitter_profile\"],\n                }\n            )\n          setBalances(responseText);\n          console.log(responseText);\n        })\n    }, []);\n\n    const handleProfleInfoForm = name => event => {\n        setValues({...values, [name]: event.target.value});\n        console.log(values)\n    }\n\n    return (\n        <div>\n        <Navbar loggedIn={true} username={\"\"}/>\n        <Grid container className={classes.root} spacing={0} justify=\"center\" alignItems=\"center\" direction=\"column\">\n            <Grid container item>\n                <Typography variant=\"h4\" component=\"h4\" className={classes.title}>Profile Information</Typography>\n                <UserInfo />\n            </Grid>\n            <Grid container item>\n                <Typography variant=\"h4\" component=\"h4\" className={classes.title}>Public Information</Typography>\n                <ProfileInfo onChange = {handleProfleInfoForm} values = {values} />\n                <Button\n            type=\"submit\"\n            fullWidth\n            variant=\"contained\"\n            color=\"primary\"\n            className={classes.submit}\n          >\n            Update public profile information\n          </Button>\n            </Grid>\n            <Grid container item>\n                <Typography variant=\"h4\" component=\"h4\" className={classes.title}>Payment Information</Typography>\n                <PaymentForm />\n            </Grid>\n        </Grid>\n        </div>\n        )\n}","/Users/matejplavevski/Documents/Projects/GitHub/fundmy.space-react/src/components/settings/elements/basic_user_info.jsx",[],"/Users/matejplavevski/Documents/Projects/GitHub/fundmy.space-react/src/components/authentication/Login.jsx",["180"],"import React from 'react';\nimport Button from '@material-ui/core/Button';\nimport TextField from '@material-ui/core/TextField';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport Snackbar from '@material-ui/core/Snackbar';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { useForm } from 'react-hook-form';\nimport loginRequest from \"../requests/login\";\nimport Alert from '../general/alert';\nimport { useHistory } from \"react-router-dom\";\n\nexport default function SignInSide() {\n    const [open, setOpen] = React.useState(false);\n    const [message, setMessage] = React.useState('');\n\n    const handleClose = (event, reason) => {\n        if (reason === 'clickaway') {\n          return;\n        }\n    \n        setOpen(false);\n    };\n\n    const useStyles = makeStyles((theme) => ({\n        form: { \n          width: '100%', // Fix IE 11 issue.\n          marginTop: theme.spacing(1),\n        },\n        submit: {\n          margin: theme.spacing(3, 0, 2),\n        },\n      }));\n\n    const classes = useStyles();\n    const { register, handleSubmit, errors } = useForm();\n    const history = useHistory();\n\n    const onSubmit = async (data) => {\n        loginRequest(data).then(response => {\n            const [status, responseText] = response\n            if(status){\n                history.push('/dashboard')\n            } else {\n                setMessage(responseText)\n                console.log('Message: ' + message   )\n                setOpen(true);\n            }\n        }).catch((error) => {\n            console.log(error)\n        })\n    \n    };\n\n  return (\n    <form className={classes.form} onSubmit={handleSubmit(onSubmit)}>\n    <TextField\n        variant=\"outlined\"\n        margin=\"normal\"\n        fullWidth\n        id=\"username\"\n        label=\"Username\"\n        name=\"username\"\n        autoComplete=\"username\"\n        autoFocus\n        inputRef={register({ required: true})}\n    />\n            <TextField\n              variant=\"outlined\"\n              margin=\"normal\"\n              required\n              fullWidth\n              name=\"password\"\n              label=\"Password\"\n              type=\"password\"\n              id=\"password\"\n              autoComplete=\"current-password\"\n              inputRef={register({ required: true})}\n            />\n            <FormControlLabel\n              control={<Checkbox value=\"remember\" color=\"primary\" />}\n              label=\"Remember me\"\n            />\n            <Button\n              type=\"submit\"\n              fullWidth\n              variant=\"contained\"\n              color=\"primary\"\n              className={classes.submit}\n            >\n              Sign In\n            </Button>\n            <Snackbar open={open} autoHideDuration={6000} onClose={handleClose}>\n                <Alert onClose={handleClose} severity=\"error\">\n                    { message }\n                </Alert>\n            </Snackbar>\n            </form>\n            \n  );\n}\n","/Users/matejplavevski/Documents/Projects/GitHub/fundmy.space-react/src/components/general/copyright.jsx",[],"/Users/matejplavevski/Documents/Projects/GitHub/fundmy.space-react/src/protected_route.jsx",["181","182"],"import React from 'react';\nimport { BrowserRouter as Router, Route, Redirect, Switch } from \"react-router-dom\";\nimport userInfo from './components/requests/userinfo';\n\nexport default function PrivateRoute({ component: Component, ...rest }) {\n    let [authenticated, setStatus] = React.useState(null)\n\n    React.useEffect(() => {\n        userInfo().then(response => {\n            const [status, responseText] = response\n\n            console.log(\"PRIVATE ROUTE\")\n            console.log(responseText)\n\n            if(status){\n                setStatus(true)\n            } else {\n                setStatus(false)\n            }\n        }).catch((error) => { \n            console.log(error)\n        })\n    }, [])\n\n    console.log(authenticated)\n\n\n    return (\n        <Route {...rest} render={(props) => (\n            authenticated === true\n            ? <Component {...props} />\n            : <Redirect to='/authenticate' />\n        )} />\n    )\n};",{"ruleId":"183","severity":1,"message":"184","line":2,"column":8,"nodeType":"185","messageId":"186","endLine":2,"endColumn":12},{"ruleId":"183","severity":1,"message":"187","line":7,"column":42,"nodeType":"185","messageId":"186","endLine":7,"endColumn":50},{"ruleId":"183","severity":1,"message":"188","line":8,"column":8,"nodeType":"185","messageId":"186","endLine":8,"endColumn":16},{"ruleId":"183","severity":1,"message":"189","line":9,"column":8,"nodeType":"185","messageId":"186","endLine":9,"endColumn":14},{"ruleId":"183","severity":1,"message":"190","line":10,"column":8,"nodeType":"185","messageId":"186","endLine":10,"endColumn":24},{"ruleId":"191","replacedBy":"192"},{"ruleId":"193","replacedBy":"194"},{"ruleId":"183","severity":1,"message":"195","line":11,"column":8,"nodeType":"185","messageId":"186","endLine":11,"endColumn":21},{"ruleId":"183","severity":1,"message":"196","line":31,"column":12,"nodeType":"185","messageId":"186","endLine":31,"endColumn":16},{"ruleId":"183","severity":1,"message":"197","line":33,"column":21,"nodeType":"185","messageId":"186","endLine":33,"endColumn":31},{"ruleId":"183","severity":1,"message":"198","line":35,"column":12,"nodeType":"185","messageId":"186","endLine":35,"endColumn":22},{"ruleId":"183","severity":1,"message":"199","line":35,"column":24,"nodeType":"185","messageId":"186","endLine":35,"endColumn":31},{"ruleId":"183","severity":1,"message":"200","line":37,"column":11,"nodeType":"185","messageId":"186","endLine":37,"endColumn":25},{"ruleId":"183","severity":1,"message":"201","line":39,"column":11,"nodeType":"185","messageId":"186","endLine":39,"endColumn":23},{"ruleId":"183","severity":1,"message":"202","line":51,"column":11,"nodeType":"185","messageId":"186","endLine":51,"endColumn":18},{"ruleId":"191","replacedBy":"203"},{"ruleId":"193","replacedBy":"204"},{"ruleId":"183","severity":1,"message":"205","line":5,"column":8,"nodeType":"185","messageId":"186","endLine":5,"endColumn":16},{"ruleId":"183","severity":1,"message":"206","line":36,"column":35,"nodeType":"185","messageId":"186","endLine":36,"endColumn":41},{"ruleId":"191","replacedBy":"207"},{"ruleId":"193","replacedBy":"208"},{"ruleId":"191","replacedBy":"209"},{"ruleId":"193","replacedBy":"210"},{"ruleId":"211","severity":1,"message":"212","line":12,"column":31,"nodeType":"213","messageId":"214","endLine":12,"endColumn":33},{"ruleId":"191","replacedBy":"215"},{"ruleId":"193","replacedBy":"216"},{"ruleId":"183","severity":1,"message":"217","line":3,"column":8,"nodeType":"185","messageId":"186","endLine":3,"endColumn":18},{"ruleId":"183","severity":1,"message":"218","line":5,"column":8,"nodeType":"185","messageId":"186","endLine":5,"endColumn":12},{"ruleId":"183","severity":1,"message":"219","line":14,"column":8,"nodeType":"185","messageId":"186","endLine":14,"endColumn":16},{"ruleId":"183","severity":1,"message":"220","line":56,"column":16,"nodeType":"185","messageId":"186","endLine":56,"endColumn":22},{"ruleId":"183","severity":1,"message":"220","line":65,"column":14,"nodeType":"185","messageId":"186","endLine":65,"endColumn":20},{"ruleId":"221","severity":1,"message":"222","line":74,"column":8,"nodeType":"223","endLine":74,"endColumn":10,"suggestions":"224"},{"ruleId":"211","severity":1,"message":"212","line":31,"column":31,"nodeType":"213","messageId":"214","endLine":31,"endColumn":33},{"ruleId":"183","severity":1,"message":"206","line":53,"column":37,"nodeType":"185","messageId":"186","endLine":53,"endColumn":43},{"ruleId":"211","severity":1,"message":"212","line":60,"column":25,"nodeType":"213","messageId":"214","endLine":60,"endColumn":27},{"ruleId":"211","severity":1,"message":"225","line":64,"column":215,"nodeType":"213","messageId":"214","endLine":64,"endColumn":217},{"ruleId":"211","severity":1,"message":"212","line":72,"column":30,"nodeType":"213","messageId":"214","endLine":72,"endColumn":32},{"ruleId":"183","severity":1,"message":"218","line":11,"column":8,"nodeType":"185","messageId":"186","endLine":11,"endColumn":12},{"ruleId":"211","severity":1,"message":"212","line":90,"column":19,"nodeType":"213","messageId":"214","endLine":90,"endColumn":21},{"ruleId":"226","severity":1,"message":"227","line":111,"column":25,"nodeType":"228","messageId":"229","endLine":111,"endColumn":27},{"ruleId":"226","severity":1,"message":"227","line":111,"column":69,"nodeType":"228","messageId":"229","endLine":111,"endColumn":71},{"ruleId":"183","severity":1,"message":"230","line":10,"column":8,"nodeType":"185","messageId":"186","endLine":10,"endColumn":14},{"ruleId":"183","severity":1,"message":"218","line":11,"column":8,"nodeType":"185","messageId":"186","endLine":11,"endColumn":12},{"ruleId":"183","severity":1,"message":"231","line":28,"column":12,"nodeType":"185","messageId":"186","endLine":28,"endColumn":20},{"ruleId":"183","severity":1,"message":"232","line":29,"column":12,"nodeType":"185","messageId":"186","endLine":29,"endColumn":20},{"ruleId":"183","severity":1,"message":"220","line":35,"column":18,"nodeType":"185","messageId":"186","endLine":35,"endColumn":24},{"ruleId":"183","severity":1,"message":"206","line":36,"column":37,"nodeType":"185","messageId":"186","endLine":36,"endColumn":43},{"ruleId":"183","severity":1,"message":"233","line":2,"column":27,"nodeType":"185","messageId":"186","endLine":2,"endColumn":33},{"ruleId":"183","severity":1,"message":"234","line":2,"column":52,"nodeType":"185","messageId":"186","endLine":2,"endColumn":58},"no-unused-vars","'logo' is defined but never used.","Identifier","unusedVar","'Redirect' is defined but never used.","'userInfo' is defined but never used.","'Navbar' is defined but never used.","'CircularProgress' is defined but never used.","no-native-reassign",["235"],"no-negated-in-lhs",["236"],"'logoutRequest' is defined but never used.","'auth' is assigned a value but never used.","'setMessage' is assigned a value but never used.","'open_alert' is assigned a value but never used.","'setOpen' is assigned a value but never used.","'preventDefault' is assigned a value but never used.","'handleChange' is assigned a value but never used.","'history' is assigned a value but never used.",["235"],["236"],"'MuiAlert' is defined but never used.","'errors' is assigned a value but never used.",["235"],["236"],["235"],["236"],"eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected",["235"],["236"],"'Typography' is defined but never used.","'Link' is defined but never used.","'loggedIn' is defined but never used.","'status' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook React.useEffect has a missing dependency: 'username'. Either include it or remove the dependency array.","ArrayExpression",["237"],"Expected '!==' and instead saw '!='.","no-mixed-operators","Unexpected mix of '&&' and '||'.","LogicalExpression","unexpectedMixedOperator","'Button' is defined but never used.","'isLoaded' is assigned a value but never used.","'balances' is assigned a value but never used.","'Router' is defined but never used.","'Switch' is defined but never used.","no-global-assign","no-unsafe-negation",{"desc":"238","fix":"239"},"Update the dependencies array to be: [username]",{"range":"240","text":"241"},[2128,2130],"[username]"]