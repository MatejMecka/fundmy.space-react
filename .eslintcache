[{"/Users/matejplavevski/Documents/Projects/GitHub/fundmy.space-react/src/index.js":"1","/Users/matejplavevski/Documents/Projects/GitHub/fundmy.space-react/src/components/authentication/Login.jsx":"2","/Users/matejplavevski/Documents/Projects/GitHub/fundmy.space-react/src/reportWebVitals.js":"3","/Users/matejplavevski/Documents/Projects/GitHub/fundmy.space-react/src/components/general/copyright.jsx":"4","/Users/matejplavevski/Documents/Projects/GitHub/fundmy.space-react/src/App.js":"5","/Users/matejplavevski/Documents/Projects/GitHub/fundmy.space-react/src/components/authentication/authentication.jsx":"6","/Users/matejplavevski/Documents/Projects/GitHub/fundmy.space-react/src/components/authentication/SignUp.jsx":"7","/Users/matejplavevski/Documents/Projects/GitHub/fundmy.space-react/src/components/general/alert.jsx":"8","/Users/matejplavevski/Documents/Projects/GitHub/fundmy.space-react/src/components/requests/signup.js":"9"},{"size":500,"mtime":1611427566680,"results":"10","hashOfConfig":"11"},{"size":2851,"mtime":1611606191726,"results":"12","hashOfConfig":"11"},{"size":362,"mtime":1611427566681,"results":"13","hashOfConfig":"11"},{"size":436,"mtime":1611509992549,"results":"14","hashOfConfig":"11"},{"size":245,"mtime":1611508455062,"results":"15","hashOfConfig":"11"},{"size":2580,"mtime":1611596195966,"results":"16","hashOfConfig":"11"},{"size":4037,"mtime":1611606335084,"results":"17","hashOfConfig":"11"},{"size":155,"mtime":1611606196725,"results":"18","hashOfConfig":"11"},{"size":768,"mtime":1611606355505,"results":"19","hashOfConfig":"11"},{"filePath":"20","messages":"21","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},"1s6rir",{"filePath":"23","messages":"24","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"25","messages":"26","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"27"},{"filePath":"28","messages":"29","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"30","messages":"31","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"32","usedDeprecatedRules":"33"},{"filePath":"34","messages":"35","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"36","messages":"37","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"38"},{"filePath":"39","messages":"40","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"41","messages":"42","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/matejplavevski/Documents/Projects/GitHub/fundmy.space-react/src/index.js",[],["43","44"],"/Users/matejplavevski/Documents/Projects/GitHub/fundmy.space-react/src/components/authentication/Login.jsx",["45"],"/Users/matejplavevski/Documents/Projects/GitHub/fundmy.space-react/src/reportWebVitals.js",[],["46","47"],"/Users/matejplavevski/Documents/Projects/GitHub/fundmy.space-react/src/components/general/copyright.jsx",[],"/Users/matejplavevski/Documents/Projects/GitHub/fundmy.space-react/src/App.js",["48"],"import logo from './logo.svg';\nimport './App.css';\nimport Authentication from './components/authentication/authentication.jsx'\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Authentication/>\n    </div>\n  );\n}\n\nexport default App;\n",["49","50"],"/Users/matejplavevski/Documents/Projects/GitHub/fundmy.space-react/src/components/authentication/authentication.jsx",[],"/Users/matejplavevski/Documents/Projects/GitHub/fundmy.space-react/src/components/authentication/SignUp.jsx",["51","52"],"import React from 'react';\nimport Button from '@material-ui/core/Button';\nimport TextField from '@material-ui/core/TextField';\nimport Snackbar from '@material-ui/core/Snackbar';\nimport MuiAlert from '@material-ui/lab/Alert';\nimport Grid from '@material-ui/core/Grid';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { useForm } from 'react-hook-form';\nimport Alert from '../general/alert';\nimport signUpRequest from '../requests/signup';\n\nexport default function SignUpSide() {\n    const [open, setOpen] = React.useState(false);\n    const [message, setMessage] = React.useState('');\n\n    const handleClose = (event, reason) => {\n        if (reason === 'clickaway') {\n          return;\n        }\n    \n        setOpen(false);\n    };\n\n\n    const useStyles = makeStyles((theme) => ({\n        form: {\n          width: '100%', // Fix IE 11 issue.\n          marginTop: theme.spacing(1),\n        },\n        submit: {\n          margin: theme.spacing(3, 0, 2),\n        },\n      }));\n\n  const classes = useStyles();\n  const { register, handleSubmit, errors } = useForm();\n\n  const onSubmit = async (data) => {\n    signUpRequest(data).then(response => {\n        const [status, responseText] = response\n        if(!status){\n            setMessage(responseText)\n            console.log('Message: ' + message   )\n            setOpen(true);\n        }\n    }).catch((error) => {\n        console.log(error)\n    })\n    }\n\n  return (\n    <form className={classes.form} onSubmit={handleSubmit(onSubmit)}>\n          <Grid container spacing={2}>\n            <Grid item xs={12}>\n            <TextField\n                    autoComplete=\"username\"\n                    name=\"username\"\n                    variant=\"outlined\"\n                    required\n                    fullWidth\n                    id=\"firstName\"\n                    label=\"Username\"\n                    autoFocus\n                    inputRef={register({ required: true})}\n                />\n            </Grid>\n            <Grid item xs={12} sm={6}>\n              <TextField\n                autoComplete=\"fname\"\n                name=\"first_name\"\n                variant=\"outlined\"\n                required\n                fullWidth\n                id=\"firstName\"\n                label=\"First name\"\n                autoFocus\n                inputRef={register({ required: true})}\n              />\n            </Grid>\n            <Grid item xs={12} sm={6}>\n              <TextField\n                variant=\"outlined\"\n                required\n                fullWidth\n                id=\"lastName\"\n                label=\"Last name\"\n                name=\"last_name\"\n                autoComplete=\"lname\"\n                inputRef={register({ required: true})}\n              />\n            </Grid>\n            <Grid item xs={12}>\n              <TextField\n                variant=\"outlined\"\n                required\n                fullWidth\n                id=\"email\"\n                label=\"Email address\"\n                name=\"email\"\n                autoComplete=\"email\"\n                type=\"email\"\n                inputRef={register({ required: true})}\n              />\n            </Grid>\n            <Grid item xs={12}>\n              <TextField\n                variant=\"outlined\"\n                required\n                fullWidth\n                name=\"password1\"\n                label=\"Password\"\n                type=\"password\"\n                id=\"password\"\n                autoComplete=\"current-password\"\n                inputRef={register({ required: true})}\n              />\n            </Grid>\n          </Grid>\n          <Button\n            type=\"submit\"\n            fullWidth\n            variant=\"contained\"\n            color=\"primary\"\n            className={classes.submit}\n          >\n            Sign Up\n          </Button>\n          <Snackbar open={open} autoHideDuration={6000} onClose={handleClose}>\n                <Alert onClose={handleClose} severity=\"error\">\n                    { message }\n                </Alert>\n            </Snackbar>\n        </form>\n  );\n}\n","/Users/matejplavevski/Documents/Projects/GitHub/fundmy.space-react/src/components/general/alert.jsx",[],"/Users/matejplavevski/Documents/Projects/GitHub/fundmy.space-react/src/components/requests/signup.js",[],{"ruleId":"53","replacedBy":"54"},{"ruleId":"55","replacedBy":"56"},{"ruleId":"57","severity":1,"message":"58","line":35,"column":37,"nodeType":"59","messageId":"60","endLine":35,"endColumn":43},{"ruleId":"53","replacedBy":"61"},{"ruleId":"55","replacedBy":"62"},{"ruleId":"57","severity":1,"message":"63","line":1,"column":8,"nodeType":"59","messageId":"60","endLine":1,"endColumn":12},{"ruleId":"53","replacedBy":"64"},{"ruleId":"55","replacedBy":"65"},{"ruleId":"57","severity":1,"message":"66","line":5,"column":8,"nodeType":"59","messageId":"60","endLine":5,"endColumn":16},{"ruleId":"57","severity":1,"message":"58","line":36,"column":35,"nodeType":"59","messageId":"60","endLine":36,"endColumn":41},"no-native-reassign",["67"],"no-negated-in-lhs",["68"],"no-unused-vars","'errors' is assigned a value but never used.","Identifier","unusedVar",["67"],["68"],"'logo' is defined but never used.",["67"],["68"],"'MuiAlert' is defined but never used.","no-global-assign","no-unsafe-negation"]